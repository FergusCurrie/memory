2024-09-13 09:17:26,058 - backend.routes.code_routes - INFO - TESTTING code 
2024-09-13 09:17:26,065 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 93, in test_code
    executed_df = run_code(code.code, f'backend/code_completion/data/{code.dataset_path}')
                                                                      ^^^^^^^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pydantic/main.py", line 828, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'TestCode' object has no attribute 'dataset_path'. Did you mean: 'dataset_name'?

2024-09-13 09:18:31,187 - backend.routes.code_routes - INFO - TESTTING code 
2024-09-13 09:18:35,846 - backend.routes.code_routes - ERROR - An error occurred adding code:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 59, in add_code
    note_id = add_code_problem_to_db(description, dataset_name, code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 35, in add_code_problem_to_db
    cursor.execute(
sqlite3.OperationalError: table code_completion has no column named dataset_name

2024-09-13 09:21:06,406 - backend.routes.code_routes - INFO - TESTTING code 
2024-09-13 09:21:15,789 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:21:15,792 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:21:15,792 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:21:17,053 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:21:17,055 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:21:17,056 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}, has reviews: []
2024-09-13 09:21:17,056 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}]
2024-09-13 09:33:23,754 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:33:23,760 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:33:23,760 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:33:25,659 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:33:25,662 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:33:25,662 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}, has reviews: []
2024-09-13 09:33:25,663 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}]
2024-09-13 09:35:02,723 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:35:02,753 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:35:02,754 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:35:03,997 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:35:03,999 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:35:04,000 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}, has reviews: []
2024-09-13 09:35:04,000 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}]
2024-09-13 09:35:04,004 - backend.routes.code_routes - INFO - Running get_data_header for dataset: None
2024-09-13 09:35:04,005 - backend.routes.code_routes - ERROR - Error in get_data_header: 400: dataset_name is required
2024-09-13 09:36:06,587 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:36:06,613 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:36:06,614 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:36:07,606 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:36:07,609 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:36:07,609 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}, has reviews: []
2024-09-13 09:36:07,609 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}]
2024-09-13 09:36:15,318 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:36:15,340 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:36:15,341 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:36:17,012 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:36:17,016 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:36:17,017 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}, has reviews: []
2024-09-13 09:36:17,017 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}]
2024-09-13 09:36:39,258 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:36:39,264 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:36:39,264 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:36:40,572 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:36:40,574 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:36:40,575 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}, has reviews: []
2024-09-13 09:36:40,575 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': 'LALALA ', 'dataset_name': 'covid_19_deaths.csv'}]
2024-09-13 09:38:58,172 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:38:58,177 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:38:58,177 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:39:21,452 - backend.routes.code_routes - INFO - TESTTING code 
2024-09-13 09:39:26,631 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:39:26,634 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:39:26,636 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:39:27,855 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:39:27,858 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:39:27,858 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': None}, has reviews: []
2024-09-13 09:39:27,858 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': None}]
2024-09-13 09:39:34,593 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:39:34,599 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:39:34,600 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:39:38,123 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:39:38,126 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:39:38,127 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': None}, has reviews: []
2024-09-13 09:39:38,127 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': None}]
2024-09-13 09:39:40,515 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:39:40,517 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:39:40,517 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:40:10,649 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:40:10,654 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:40:10,654 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:40:12,548 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:40:12,555 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:40:12,556 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:40:14,607 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:40:14,608 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:40:14,608 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': None}, has reviews: []
2024-09-13 09:40:14,609 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': None}]
2024-09-13 09:42:28,361 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:42:28,365 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:42:28,365 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:42:29,190 - backend.routes.card_routes - INFO - Getting all cards
2024-09-13 09:42:29,192 - backend.routes.card_routes - INFO - Cards: []
2024-09-13 09:42:29,228 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-13 09:42:29,229 - backend.routes.card_routes - INFO - Reviews: []
2024-09-13 09:42:42,226 - backend.routes.code_routes - INFO - TESTTING code 
2024-09-13 09:42:43,891 - backend.routes.code_routes - ERROR - An error occurred adding code:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 71, in add_code
    note_id = add_code_problem_to_db(description, dataset_name, code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 31, in add_code_problem_to_db
    header = get_pandas_header(dataset_path)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 10, in get_pandas_header
    return str(pd.read_csv(dataset_name).head(3).to_json())
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pandas/io/parsers/readers.py", line 1026, in read_csv
    return _read(filepath_or_buffer, kwds)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pandas/io/parsers/readers.py", line 620, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pandas/io/parsers/readers.py", line 1620, in __init__
    self._engine = self._make_engine(f, self.engine)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pandas/io/parsers/readers.py", line 1880, in _make_engine
    self.handles = get_handle(
                   ^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pandas/io/common.py", line 873, in get_handle
    handle = open(
             ^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'covid_19_deaths.csv'

2024-09-13 09:43:37,723 - backend.routes.code_routes - INFO - TESTTING code 
2024-09-13 09:43:43,299 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:43:43,306 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:43:43,306 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:43:44,452 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:43:44,455 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:43:44,455 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:43:44,455 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:44:24,042 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:44:24,047 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:44:24,048 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:44:25,516 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:44:25,534 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:44:25,536 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:44:25,537 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:45:57,801 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:45:57,805 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:45:57,805 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:45:59,364 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:45:59,366 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:45:59,367 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:45:59,367 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:46:31,129 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:46:31,156 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:46:31,158 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:46:32,476 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:46:32,478 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:46:32,478 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:46:32,478 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:46:35,768 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:46:35,769 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:46:35,770 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:46:54,032 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:46:54,036 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:46:54,036 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:46:55,369 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:46:55,372 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:46:55,372 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:46:55,372 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:47:04,224 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:47:04,230 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:47:04,230 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:47:05,685 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:47:05,688 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:47:05,688 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:47:05,688 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:49:58,861 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:49:58,873 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:49:58,873 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:50:00,062 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:50:00,064 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:50:00,065 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:50:00,065 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:50:15,564 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 93, in submit_code
    passed, result_head = run_code_against_test(
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 43, in run_code_against_test
    description = code_completion_row["description"]
                  ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
KeyError: 'description'

2024-09-13 09:52:05,856 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:52:05,862 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:52:05,862 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:52:07,259 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:52:07,262 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:52:07,262 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:52:07,263 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:52:20,026 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 93, in submit_code
    passed, result_head = run_code_against_test(
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 44, in run_code_against_test
    dataset_path = code_completion_row["dataset_path"]
                   ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
KeyError: 'dataset_path'

2024-09-13 09:53:02,832 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:53:02,837 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:53:02,839 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:53:04,327 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:53:04,329 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:53:04,329 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:53:04,330 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:53:06,993 - backend.code_completion.check_code - INFO - # Write your code here. there will be a variable df with data. store submission in object called result
result = df.select(pl.all().n_unique())
2024-09-13 09:53:07,130 - backend.code_completion.check_code - INFO -    Data As Of  Start Date  End Date  ...  Influenza Deaths  Pneumonia, Influenza, or COVID-19 Deaths  Footnote
0           1          45        45  ...               493                                      4264         2

[1 rows x 16 columns]
2024-09-13 09:53:07,151 - backend.code_completion.check_code - INFO -    Data As Of  Start Date  End Date  ...  Influenza Deaths  Pneumonia, Influenza, or COVID-19 Deaths  Footnote
0           1          45        45  ...               493                                      4264         2

[1 rows x 16 columns]
2024-09-13 09:53:14,472 - backend.code_completion.check_code - INFO - # Write your code here. there will be a variable df with data. store submission in object called result
result = df.select(pl.all().n_unique())
2024-09-13 09:53:14,527 - backend.code_completion.check_code - INFO -    Data As Of  Start Date  End Date  ...  Influenza Deaths  Pneumonia, Influenza, or COVID-19 Deaths  Footnote
0           1          45        45  ...               493                                      4264         2

[1 rows x 16 columns]
2024-09-13 09:53:14,532 - backend.code_completion.check_code - INFO -    Data As Of  Start Date  End Date  ...  Influenza Deaths  Pneumonia, Influenza, or COVID-19 Deaths  Footnote
0           1          45        45  ...               493                                      4264         2

[1 rows x 16 columns]
2024-09-13 09:54:39,169 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:54:39,178 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:54:39,178 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 09:54:40,225 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-13 09:54:40,227 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:54:40,227 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-13 09:54:40,227 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 09:54:42,821 - backend.code_completion.check_code - INFO - # Write your code here. there will be a variable df with data. store submission in object called result
result = df.select(pl.all().n_unique())
2024-09-13 09:54:42,949 - backend.code_completion.check_code - INFO -    Data As Of  Start Date  End Date  ...  Influenza Deaths  Pneumonia, Influenza, or COVID-19 Deaths  Footnote
0           1          45        45  ...               493                                      4264         2

[1 rows x 16 columns]
2024-09-13 09:54:42,970 - backend.code_completion.check_code - INFO -    Data As Of  Start Date  End Date  ...  Influenza Deaths  Pneumonia, Influenza, or COVID-19 Deaths  Footnote
0           1          45        45  ...               493                                      4264         2

[1 rows x 16 columns]
2024-09-13 09:58:00,971 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-13 09:58:00,977 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-13 09:58:00,977 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-13 10:58:31,527 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 10:58:47,625 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 10:59:30,490 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 10:59:30,494 - backend.routes.code_routes - ERROR - An error occurred adding code:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 82, in get_reviews
    reviews = [r for r in reviews if r.note_id in [c["note_id"] for c in codes]]
                                     ^^^^^^^^^
AttributeError: 'dict' object has no attribute 'note_id'

2024-09-13 11:01:30,194 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:01:30,198 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:01:46,009 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:01:46,013 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:01:47,506 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:01:47,510 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:01:47,511 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:01:47,512 - backend.routes.code_routes - INFO - Cards: [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 11:01:49,316 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:01:49,323 - backend.routes.code_routes - INFO - Cards: [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 11:01:49,324 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:01:49,325 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:01:50,468 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:01:50,470 - backend.routes.code_routes - INFO - Cards: [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 11:01:50,471 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:01:50,473 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:01:53,162 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:01:53,165 - backend.routes.code_routes - INFO - Cards: [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-13 11:01:53,166 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:01:53,168 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:02:11,925 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:02:11,929 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:02:11,966 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:02:11,968 - backend.routes.code_routes - ERROR - An error occurred adding code:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 47, in get_cards
    return {"codes": codes}
                     ^^^^^
NameError: name 'codes' is not defined

2024-09-13 11:02:26,711 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:02:26,713 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:02:26,714 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:02:39,315 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:02:39,323 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:02:39,323 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:08:07,050 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:08:07,059 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:08:07,061 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:08:10,695 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:08:38,868 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:08:38,874 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:08:38,877 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:08:41,607 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:08:41,607 - backend.routes.code_routes - ERROR - Error updating card 1: 'CodeUpdate' object has no attribute 'question'
2024-09-13 11:08:59,452 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:08:59,459 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:08:59,491 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:09:01,700 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:09:01,732 - backend.routes.code_routes - ERROR - Error updating card 1: 'CodeUpdate' object has no attribute 'question'
2024-09-13 11:09:01,833 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.question, code.answer)
                                              ^^^^^^^^^^^^^
  File "/root/.cache/pypoetry/virtualenvs/memory-7yvjw6ke-py3.12/lib/python3.12/site-packages/pydantic/main.py", line 828, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'CodeUpdate' object has no attribute 'question'

2024-09-13 11:09:35,157 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:09:35,166 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:09:35,169 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:09:38,455 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:09:38,456 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: name 'question' is not defined
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 51, in update_code_in_db
    cursor.execute("UPDATE code_completion SET dataset_name = ?, problem_description = ?, code = ?, WHERE id = ?", (question, answer, code, code_id))
                                                                                                                    ^^^^^^^^
NameError: name 'question' is not defined
2024-09-13 11:09:38,457 - backend.routes.code_routes - ERROR - Error updating card 1: name 'question' is not defined
2024-09-13 11:09:38,459 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 51, in update_code_in_db
    cursor.execute("UPDATE code_completion SET dataset_name = ?, problem_description = ?, code = ?, WHERE id = ?", (question, answer, code, code_id))
                                                                                                                    ^^^^^^^^
NameError: name 'question' is not defined

2024-09-13 11:09:41,479 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:09:41,590 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:09:41,592 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:09:47,465 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:09:47,466 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: name 'question' is not defined
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 51, in update_code_in_db
    cursor.execute("UPDATE code_completion SET dataset_name = ?, problem_description = ?, code = ?, WHERE id = ?", (question, answer, code, code_id))
                                                                                                                    ^^^^^^^^
NameError: name 'question' is not defined
2024-09-13 11:09:47,467 - backend.routes.code_routes - ERROR - Error updating card 1: name 'question' is not defined
2024-09-13 11:09:47,469 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 51, in update_code_in_db
    cursor.execute("UPDATE code_completion SET dataset_name = ?, problem_description = ?, code = ?, WHERE id = ?", (question, answer, code, code_id))
                                                                                                                    ^^^^^^^^
NameError: name 'question' is not defined

2024-09-13 11:10:02,163 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:10:02,169 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:10:02,169 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:10:04,441 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:10:04,442 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: near "WHERE": syntax error
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 51, in update_code_in_db
    cursor.execute("UPDATE code_completion SET dataset_name = ?, problem_description = ?, code = ?, WHERE id = ?", (dataset_name, problem_description, code, code_id))
sqlite3.OperationalError: near "WHERE": syntax error
2024-09-13 11:10:04,443 - backend.routes.code_routes - ERROR - Error updating card 1: near "WHERE": syntax error
2024-09-13 11:10:04,444 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 51, in update_code_in_db
    cursor.execute("UPDATE code_completion SET dataset_name = ?, problem_description = ?, code = ?, WHERE id = ?", (dataset_name, problem_description, code, code_id))
sqlite3.OperationalError: near "WHERE": syntax error

2024-09-13 11:10:16,843 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:10:16,859 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:10:16,861 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:10:19,215 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:10:19,222 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: Code with id 1 not found
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 58, in update_code_in_db
    raise ValueError(f"Code with id {code_id} not found")
ValueError: Code with id 1 not found
2024-09-13 11:10:19,223 - backend.routes.code_routes - ERROR - Error updating card 1: Code with id 1 not found
2024-09-13 11:10:19,224 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 58, in update_code_in_db
    raise ValueError(f"Code with id {code_id} not found")
ValueError: Code with id 1 not found

2024-09-13 11:10:47,553 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:10:47,557 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:10:47,596 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:10:50,361 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:10:50,365 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: no such column: question
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question
2024-09-13 11:10:50,367 - backend.routes.code_routes - ERROR - Error updating card 1: no such column: question
2024-09-13 11:10:50,371 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question

2024-09-13 11:10:51,204 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:10:51,206 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: no such column: question
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question
2024-09-13 11:10:51,206 - backend.routes.code_routes - ERROR - Error updating card 1: no such column: question
2024-09-13 11:10:51,207 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question

2024-09-13 11:10:52,830 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:10:52,894 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:10:52,900 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:10:58,369 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:10:58,374 - backend.db.code_completion - ERROR - Error in update_card_in_db for card 1: no such column: question
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question
2024-09-13 11:10:58,374 - backend.routes.code_routes - ERROR - Error updating card 1: no such column: question
2024-09-13 11:10:58,374 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question

2024-09-13 11:11:38,570 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:11:38,580 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:11:38,581 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:11:41,470 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:11:41,475 - backend.db.code_completion - ERROR - Error in update_code_in_db for card 1: no such column: question
Traceback (most recent call last):
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question
2024-09-13 11:11:41,477 - backend.routes.code_routes - ERROR - Error updating card 1: no such column: question
2024-09-13 11:11:41,479 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 152, in update_code
    updated_card = update_code_in_db(code.id, code.dataset_name, code.problem_description, code.code)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/db/code_completion.py", line 64, in update_code_in_db
    raise e
  File "/workspaces/memory/backend/db/code_completion.py", line 54, in update_code_in_db
    cursor.execute("SELECT id, question, answer FROM code_completion WHERE id = ?", (code_id,))
sqlite3.OperationalError: no such column: question

2024-09-13 11:12:01,625 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:12:01,627 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:12:01,629 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:12:03,101 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:12:03,106 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:12:03,107 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:12:06,050 - backend.routes.code_routes - INFO - Updating code 1
2024-09-13 11:12:08,319 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-13 11:12:08,324 - backend.routes.code_routes - INFO - Reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-13 11:12:08,355 - backend.routes.code_routes - INFO - Getting all cards
2024-09-13 11:12:11,897 - backend.routes.code_routes - INFO - Updating code 1
2024-09-16 07:53:43,905 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 07:53:43,914 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 07:53:43,915 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 07:53:44,946 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 07:53:44,948 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 07:53:44,949 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 07:53:44,950 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 07:53:44,951 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-13, next_Review=2024-09-14
2024-09-16 07:53:44,951 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}]
2024-09-16 09:00:24,329 - backend.routes.card_routes - INFO - Getting all cards
2024-09-16 09:00:24,338 - backend.routes.card_routes - INFO - Cards: []
2024-09-16 09:00:24,340 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-16 09:00:24,341 - backend.routes.card_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:00:38,800 - backend.routes.card_routes - INFO - Getting all cards
2024-09-16 09:00:38,806 - backend.routes.card_routes - INFO - Cards: []
2024-09-16 09:00:38,830 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-16 09:00:38,833 - backend.routes.card_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:00:38,900 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:00:38,904 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:00:38,904 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:00:40,230 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:00:40,236 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:00:40,237 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:00:40,243 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:00:40,244 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,244 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:00:40,244 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:00:40,245 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,245 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:00:40,245 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:00:40,246 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:00:40,246 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,248 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:00:40,248 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:00:40,249 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,250 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:00:40,251 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:00:40,251 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,251 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:00:40,252 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:00:40,252 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,252 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:00:40,252 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:00:40,253 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:00:40,254 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,254 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:00:40,254 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:00:40,255 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:00:40,256 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:00:40,257 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:00:40,258 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,258 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:00:40,258 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:00:40,259 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,259 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:00:40,260 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:00:40,260 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:00:40,260 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:01:58,497 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:01:58,502 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:01:58,502 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:01:59,822 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:01:59,824 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:01:59,825 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:01:59,825 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:01:59,825 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,825 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:01:59,825 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:01:59,826 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:01:59,827 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,827 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:01:59,827 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:01:59,827 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,827 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:01:59,828 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:01:59,828 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,828 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:01:59,828 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:01:59,828 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:01:59,829 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,829 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:01:59,829 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:01:59,829 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:01:59,830 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:01:59,830 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:01:59,830 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,830 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:01:59,830 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:01:59,831 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,831 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:01:59,831 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:01:59,831 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:01:59,831 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:02:28,236 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:02:28,243 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:02:28,243 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:02:29,720 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:02:29,735 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:02:29,738 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:02:29,739 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:29,739 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,740 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:02:29,740 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:29,741 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,741 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:02:29,741 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:02:29,742 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:29,742 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,742 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:02:29,743 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:29,743 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,744 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:02:29,744 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:29,744 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,745 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:02:29,745 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:29,746 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,746 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:02:29,747 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:02:29,748 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:29,748 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,748 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:02:29,749 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:02:29,749 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:02:29,750 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:02:29,750 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:29,751 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,751 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:02:29,751 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:29,752 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,752 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:02:29,753 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:29,753 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:29,754 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:02:35,460 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-16 09:02:35,462 - backend.routes.card_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:02:35,499 - backend.routes.card_routes - INFO - Getting all cards
2024-09-16 09:02:35,501 - backend.routes.card_routes - INFO - Cards: []
2024-09-16 09:02:35,888 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:02:35,891 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:02:35,892 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:02:36,932 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:02:36,934 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:02:36,934 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:02:36,934 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:36,934 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,935 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:02:36,935 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:36,935 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,936 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:02:36,936 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:02:36,936 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:36,936 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,936 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:02:36,937 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:36,937 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,937 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:02:36,937 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:36,937 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,937 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:02:36,938 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:36,938 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,938 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:02:36,938 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:02:36,938 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:36,938 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,939 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:02:36,940 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:02:36,940 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,940 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:02:36,940 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:02:36,940 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:02:36,941 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:09:35,711 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:09:35,715 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:09:35,716 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:09:37,052 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:09:37,054 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:09:37,054 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:09:37,055 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:09:37,055 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,056 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:09:37,056 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:09:37,056 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,056 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:09:37,056 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:09:37,056 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:09:37,057 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,057 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:09:37,057 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:09:37,057 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,057 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:09:37,057 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:09:37,058 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:09:37,059 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,060 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:09:37,060 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:09:37,060 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,060 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:09:37,060 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:09:37,060 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:09:37,060 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:09:41,889 - backend.code_completion.check_code - INFO - result = (
	df
	.wef
)
2024-09-16 09:09:42,069 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 140, in submit_code
    passed, result_head, error = run_code_against_test(
                                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 55, in run_code_against_test
    submission_df, submission_error = run_code(code_text, dataset_path)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 23, in run_code
    exec("import polars as pl\n" + code, {}, local_vars)
  File "<string>", line 4, in <module>
AttributeError: 'DataFrame' object has no attribute 'wef'

2024-09-16 09:11:23,784 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:11:23,790 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:11:23,790 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:11:25,148 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:11:25,156 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:11:25,158 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:11:25,158 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:11:25,159 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,160 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:11:25,162 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:11:25,162 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,163 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:11:25,163 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:11:25,168 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:11:25,169 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,171 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:11:25,172 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:11:25,173 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,174 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:11:25,174 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:11:25,176 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,177 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:11:25,177 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:11:25,179 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,179 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:11:25,179 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:11:25,180 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:11:25,181 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,181 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:11:25,182 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:11:25,182 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:11:25,183 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:11:25,183 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:11:25,184 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,186 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:11:25,187 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:11:25,187 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,190 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:11:25,191 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:11:25,192 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:11:25,193 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:11:29,292 - backend.code_completion.check_code - INFO - result = (
	df
	.serfs
)
2024-09-16 09:11:29,402 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0               Fabrikam             1516
1               Contoso               977
2                Litware              875
3               A. Datum              555
4   Wide World Importers             3922
5       Southridge Video             6749
6          Tailspin Toys             2732
7       Adventure Works                30
8               Litware               161
9      Northwind Traders              638
10               Contoso            11132
11             Proseware             2763
12     The Phone Company             6519
13       Adventure Works             4616
14            Fabrikam                332
2024-09-16 09:11:29,416 - backend.code_completion.check_code - INFO - None
2024-09-16 09:11:29,417 - backend.routes.code_routes - ERROR - An error occurred in code compleition:
Traceback (most recent call last):
  File "/workspaces/memory/backend/routes/code_routes.py", line 140, in submit_code
    passed, result_head, error = run_code_against_test(
                                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 67, in run_code_against_test
    if compare_dataframes(submission_df, solution_df):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspaces/memory/backend/code_completion/check_code.py", line 40, in compare_dataframes
    if set(df1.columns) != set(df2.columns):
           ^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'columns'

2024-09-16 09:12:19,235 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:12:19,239 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:12:19,239 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:12:20,449 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:12:20,452 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:12:20,453 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:12:20,453 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:20,454 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,454 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:12:20,454 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:20,454 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,454 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:12:20,455 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:12:20,455 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:20,455 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,455 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:12:20,455 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:20,456 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,456 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:12:20,456 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:20,456 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,456 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:12:20,456 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:20,457 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,457 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:12:20,457 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:12:20,457 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:20,457 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,458 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:12:20,459 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:20,459 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,459 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:12:20,459 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:20,459 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:20,460 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:12:23,102 - backend.code_completion.check_code - INFO - result = (
	df
	.wef
)
2024-09-16 09:12:23,120 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:12:23,123 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:12:57,872 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:12:57,884 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:12:57,885 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:12:58,832 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:12:58,835 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:12:58,835 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:12:58,838 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:58,838 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,838 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:12:58,839 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:58,839 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,839 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:12:58,839 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:12:58,840 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:58,840 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,840 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:12:58,840 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:58,841 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,841 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:12:58,841 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:58,841 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,841 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:12:58,841 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:58,842 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,842 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:12:58,842 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:12:58,842 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:58,842 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,843 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:12:58,844 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:12:58,844 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,844 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:12:58,844 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:12:58,844 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:12:58,845 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:13:02,015 - backend.code_completion.check_code - INFO - result = (
	df
	.wef
)
2024-09-16 09:13:02,045 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0               A. Datum              555
1               Fabrikam             1516
2               Litware               161
3   Wide World Importers             3922
4             Fabrikam                332
5              Proseware             2763
6      Northwind Traders              638
7       Southridge Video             6749
8                Contoso            11132
9               Contoso               977
10               Litware              875
11       Adventure Works             4616
12     The Phone Company             6519
13      Adventure Works                30
14         Tailspin Toys             2732
2024-09-16 09:13:02,050 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:13:03,960 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:13:03,963 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:13:03,964 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:14:02,218 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:14:02,224 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:14:02,224 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:14:02,923 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:14:02,926 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:14:02,926 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:14:02,927 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:02,927 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,927 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:14:02,928 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:02,928 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,928 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:14:02,928 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:14:02,928 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:02,928 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,929 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:14:02,929 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:02,929 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,930 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:14:02,930 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:02,930 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,930 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:14:02,930 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:02,931 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:02,932 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:14:02,932 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:14:02,932 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:02,932 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,932 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:14:02,932 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:02,933 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,933 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:14:02,933 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:02,933 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:02,933 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:14:06,024 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-16 09:14:06,025 - backend.routes.card_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:14:06,066 - backend.routes.card_routes - INFO - Getting all cards
2024-09-16 09:14:06,067 - backend.routes.card_routes - INFO - Cards: []
2024-09-16 09:14:09,126 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:14:09,128 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:14:09,128 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:14:16,169 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:14:16,175 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:14:16,175 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:14:16,175 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:16,176 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,176 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:14:16,176 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:16,176 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,176 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:14:16,177 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:14:16,177 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:16,177 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,177 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:14:16,177 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:16,177 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,178 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:14:16,178 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:16,178 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,178 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:14:16,179 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:16,179 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,179 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:16,180 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:14:16,180 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:16,180 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,180 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:16,180 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:16,180 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:14:16,181 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:14:16,181 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:16,181 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,181 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:14:16,181 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:16,182 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,182 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:14:16,182 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:16,182 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:16,182 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:14:19,957 - backend.code_completion.check_code - INFO - result = (
	df
	.wef
)
2024-09-16 09:14:20,107 - backend.code_completion.check_code - INFO -                                                content
0    Very costly for the premium version (approx In...
1                                             Very bad
2                                             Very bad
3    Very slow app it took me 10 min just to start ...
4    Very average app, not intuitive . Will probabl...
..                                                 ...
383                                       Very helpful
384  Very useful in my day to day activity. Able to...
385               Very helpful and users friendly app.
386                                        Very useful
387                  Very useful apps. You must try it

[388 rows x 1 columns]
2024-09-16 09:14:20,117 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:14:52,618 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:14:52,622 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:14:52,622 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:14:53,772 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:14:53,775 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:14:53,776 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:14:53,776 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:53,776 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,776 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:14:53,777 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:53,777 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,777 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:14:53,777 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:14:53,777 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:53,778 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,778 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:14:53,778 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:53,778 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,778 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:53,779 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:14:53,780 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:53,780 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,780 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:53,780 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:14:53,780 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:14:53,780 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:14:53,781 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:53,781 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,781 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:14:53,781 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:14:53,781 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,781 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:14:53,782 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:14:53,782 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:14:53,782 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:14:57,302 - backend.code_completion.check_code - INFO - result = (
	df.sef

)
2024-09-16 09:14:57,354 - backend.code_completion.check_code - INFO -                                                content
0    Very costly for the premium version (approx In...
1                                             Very bad
2                                             Very bad
3    Very slow app it took me 10 min just to start ...
4    Very average app, not intuitive . Will probabl...
..                                                 ...
383                                       Very helpful
384  Very useful in my day to day activity. Able to...
385               Very helpful and users friendly app.
386                                        Very useful
387                  Very useful apps. You must try it

[388 rows x 1 columns]
2024-09-16 09:14:57,366 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:15:29,768 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:15:29,773 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:15:29,774 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:15:31,127 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:15:31,130 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:15:31,130 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:15:31,131 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:15:31,131 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,131 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:15:31,131 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:15:31,132 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,132 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:15:31,132 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:15:31,133 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:15:31,133 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,133 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:15:31,133 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:15:31,134 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,134 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:15:31,135 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:15:31,135 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,135 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:15:31,135 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:15:31,136 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,136 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:15:31,136 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:15:31,136 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:15:31,136 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,137 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:15:31,137 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:15:31,137 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:15:31,137 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:15:31,137 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:15:31,138 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,138 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:15:31,138 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:15:31,138 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,138 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:15:31,138 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:15:31,139 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:15:31,139 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:15:36,231 - backend.code_completion.check_code - INFO - result = (
	df.sef

)
2024-09-16 09:15:36,291 - backend.code_completion.check_code - INFO -                                                content
0    Very costly for the premium version (approx In...
1                                             Very bad
2                                             Very bad
3    Very slow app it took me 10 min just to start ...
4    Very average app, not intuitive . Will probabl...
..                                                 ...
383                                       Very helpful
384  Very useful in my day to day activity. Able to...
385               Very helpful and users friendly app.
386                                        Very useful
387                  Very useful apps. You must try it

[388 rows x 1 columns]
2024-09-16 09:15:36,300 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:16:12,739 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:16:12,744 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:16:12,744 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:16:13,626 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:16:13,633 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:16:13,634 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:16:13,635 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:16:13,635 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,636 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:16:13,637 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:16:13,638 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,638 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:16:13,639 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:16:13,640 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:16:13,641 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,642 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:16:13,642 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:16:13,643 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,644 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:16:13,645 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:16:13,645 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,645 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:16:13,645 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:16:13,645 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,645 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:16:13,646 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:16:13,646 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:16:13,646 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,646 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:16:13,647 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:16:13,647 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:16:13,648 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:16:13,648 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:16:13,648 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,648 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:16:13,649 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:16:13,649 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,649 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:16:13,649 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:16:13,649 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:16:13,650 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:16:17,290 - backend.code_completion.check_code - INFO - result = (
	df.sef

)
2024-09-16 09:16:17,303 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:16:17,308 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:16:21,560 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:16:21,562 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:16:21,563 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:17:22,170 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:17:22,175 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:22,176 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:17:23,138 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:23,142 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:23,142 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:23,143 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:23,143 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,144 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:23,144 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:23,145 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,145 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:23,145 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:23,145 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:23,146 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,146 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:23,147 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:23,147 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,147 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:23,147 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:23,148 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,148 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:23,148 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:23,149 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,149 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:23,149 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:23,149 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:23,150 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,150 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:23,150 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:23,151 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:23,151 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:23,152 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:23,153 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,157 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:23,157 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:23,157 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,158 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:23,158 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:23,158 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:23,158 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:25,849 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:25,853 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:25,853 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:25,853 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:25,854 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,854 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:25,854 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:25,855 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,855 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:25,855 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:25,855 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:25,856 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,856 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:25,856 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:25,856 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,856 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:25,857 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:25,857 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,857 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:25,857 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:25,857 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,858 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:25,858 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:25,858 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:25,858 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,859 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:25,859 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:25,859 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:25,859 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:25,859 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:25,860 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,860 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:25,860 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:25,860 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,860 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:25,861 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:25,861 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:25,861 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:26,853 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:26,865 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:26,865 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:26,866 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:26,866 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,867 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:26,867 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:26,867 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,868 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:26,868 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:26,868 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:26,869 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,869 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:26,870 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:26,870 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,871 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:26,871 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:26,871 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,872 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:26,872 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:26,872 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,873 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:26,873 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:26,873 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:26,874 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,874 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:26,875 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:26,875 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:26,876 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:26,876 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:26,877 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,877 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:26,877 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:26,878 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,879 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:26,879 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:26,880 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:26,880 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:27,874 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:27,876 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:27,877 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:27,877 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:27,877 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,877 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:27,877 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:27,878 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,878 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:27,878 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:27,878 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:27,878 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,878 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:27,879 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,880 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:27,880 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:27,880 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:27,880 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,880 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:27,880 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:27,881 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,882 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:27,882 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:27,882 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:27,882 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:28,814 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:28,817 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:28,817 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:28,817 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:28,817 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,817 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:28,818 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:28,818 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,818 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:28,818 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:28,818 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:28,818 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,819 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:28,819 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:28,819 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,819 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:28,819 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:28,820 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,820 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:28,820 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:28,820 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,820 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:28,820 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:28,821 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:28,821 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,821 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:28,821 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:28,821 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:28,822 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:28,822 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:28,822 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,822 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:28,823 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:28,823 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,823 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:28,823 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:28,824 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:28,824 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:30,710 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:30,712 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:30,713 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:30,713 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:30,713 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,713 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:30,714 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:30,714 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,714 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:30,714 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:30,714 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:30,715 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,715 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:30,715 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:30,715 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,715 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:30,716 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:30,716 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,716 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:30,716 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:30,716 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:30,717 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:30,718 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:30,718 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:30,718 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,718 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:30,718 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:30,718 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,719 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:30,719 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:30,719 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:30,719 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:32,015 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:32,018 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:32,018 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:32,018 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:32,018 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,018 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:32,018 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:32,019 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,019 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:32,019 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:32,019 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:32,019 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,019 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:32,020 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:32,021 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,021 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:32,021 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:32,021 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:32,021 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,021 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:32,022 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:32,022 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:32,022 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:32,022 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:32,022 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,022 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:32,023 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:32,023 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,023 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:32,023 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:32,023 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:32,023 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:34,036 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:34,039 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:34,039 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:34,039 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,040 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,040 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:34,040 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,040 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,042 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:34,042 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:34,043 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,043 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,043 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:34,043 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,043 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,043 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:34,044 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:34,045 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,045 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,045 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:34,045 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:34,045 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:34,045 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:34,046 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,046 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,046 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:34,046 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,046 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,046 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:34,047 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,047 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,047 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:34,484 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:34,486 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:34,487 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:34,487 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,487 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,487 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:34,487 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,488 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,488 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:34,488 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:34,488 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,488 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,488 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:34,489 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,489 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,489 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:34,489 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,489 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,490 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:34,490 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,490 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,490 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:34,491 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:34,491 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,491 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,491 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:34,492 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:34,492 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:34,492 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:34,493 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,493 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,493 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:34,494 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:34,494 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,494 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:34,495 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:34,495 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:34,496 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:36,465 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:36,468 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:36,469 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:36,469 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,469 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,469 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:36,470 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,470 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,470 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:36,470 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:36,471 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,471 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,471 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:36,471 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,471 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,471 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:36,472 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,472 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,472 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:36,472 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,472 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,472 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:36,473 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:36,473 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,473 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,473 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:36,473 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:36,474 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:36,474 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:36,474 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,474 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,474 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:36,475 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,475 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,475 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:36,475 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,475 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,475 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:36,960 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:36,965 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:36,965 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:36,966 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,966 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,967 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:36,969 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,969 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,970 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:36,970 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:36,971 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,971 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,972 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:36,972 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,973 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,973 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:36,973 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,974 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,979 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:36,980 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,980 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,980 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:36,981 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:36,981 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,982 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,982 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:36,983 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:36,983 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:36,983 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:36,983 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,984 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,984 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:36,984 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:36,984 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,984 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:36,985 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:36,985 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:36,985 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:17:38,723 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:17:38,729 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:17:38,729 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:17:38,730 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:38,730 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,730 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:17:38,731 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:38,731 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,731 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:17:38,732 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:17:38,732 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:38,732 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,733 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:17:38,733 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:38,733 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,734 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:17:38,734 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:38,734 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,735 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:17:38,735 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:38,735 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,736 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:38,736 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:17:38,737 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:38,737 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,737 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:38,738 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:17:38,738 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:17:38,739 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:17:38,739 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:38,739 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,740 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:17:38,740 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:17:38,740 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,741 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:17:38,741 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:17:38,741 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:17:38,742 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:19:04,906 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:19:04,912 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:19:04,912 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:19:05,926 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:19:05,929 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:19:05,929 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:19:05,929 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:05,930 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,930 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:19:05,930 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:05,930 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,930 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:19:05,931 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:19:05,931 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:05,931 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,931 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:19:05,931 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:05,931 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,932 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:19:05,932 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:05,932 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,932 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:19:05,932 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:05,933 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,933 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:19:05,933 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:19:05,933 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:05,933 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,933 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:19:05,934 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:19:05,934 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:19:05,934 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:19:05,934 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:05,934 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,935 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:19:05,935 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:05,935 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,935 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:19:05,935 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:05,935 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:05,936 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:19:36,069 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:19:36,074 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:19:36,074 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:19:37,866 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:19:37,868 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:19:37,868 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:19:37,869 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:37,869 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,869 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:19:37,869 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:37,869 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,870 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:19:37,870 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:19:37,870 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:37,870 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,870 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:19:37,870 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:37,871 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,871 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:19:37,871 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:37,871 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,871 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:19:37,871 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:37,872 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,872 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:19:37,872 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:19:37,872 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:37,872 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,873 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:19:37,873 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:19:37,873 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:19:37,873 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:19:37,873 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:37,873 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,874 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:19:37,874 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:19:37,874 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,874 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:19:37,874 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:19:37,874 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:19:37,875 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:20:05,523 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:20:05,528 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:20:05,528 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:20:07,368 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:20:07,371 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:20:07,371 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:20:07,371 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:20:07,372 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,372 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:20:07,372 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:20:07,372 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,372 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:20:07,372 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:20:07,373 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:20:07,373 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,373 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:20:07,374 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:20:07,374 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,374 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:20:07,374 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:20:07,375 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,375 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:20:07,375 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:20:07,375 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,376 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:20:07,376 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:20:07,376 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:20:07,376 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,376 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:20:07,377 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:20:07,377 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:20:07,377 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:20:07,377 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:20:07,377 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,378 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:20:07,378 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:20:07,378 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,379 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:20:07,379 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:20:07,379 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:20:07,379 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:21:11,482 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:21:11,487 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:21:11,487 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:21:19,940 - backend.routes.card_routes - INFO - Getting cards to review
2024-09-16 09:21:19,943 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:21:19,943 - backend.routes.card_routes - INFO - Cards to review: []
2024-09-16 09:21:21,294 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:21:21,300 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:21:21,301 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:21:21,302 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:21:21,302 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,303 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:21:21,303 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:21:21,303 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,303 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:21:21,303 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:21:21,303 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:21:21,304 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,304 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:21:21,304 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:21:21,304 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,304 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:21:21,305 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:21:21,306 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:21:21,306 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,306 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:21:21,306 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:21:21,306 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:21:21,306 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:21:21,307 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:21:21,308 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:21:21,308 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:22:00,992 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:22:00,999 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:22:00,999 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:22:00,999 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:22:01,000 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,000 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:22:01,000 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:22:01,000 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,001 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:22:01,001 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:22:01,001 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:22:01,001 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,001 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:22:01,001 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:22:01,002 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,002 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:22:01,002 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:22:01,002 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,002 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,003 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:22:01,004 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:22:01,004 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:22:01,004 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:22:01,004 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:22:01,005 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,005 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:22:01,005 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:22:01,005 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,005 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:22:01,005 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:22:01,006 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:22:01,006 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:22:04,817 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:04,825 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:04,851 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:14,641 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:14,643 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:14,645 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:18,343 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:18,345 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:18,346 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:25,326 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:25,328 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:25,329 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:26,685 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:26,688 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:26,690 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:28,908 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:28,910 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:28,911 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:31,208 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:31,209 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:31,211 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:32,744 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:32,746 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:32,748 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:22:38,277 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:22:38,280 - backend.code_completion.check_code - INFO -           date
0   2023-01-01
1   2023-01-02
2   2023-01-03
3   2023-01-04
4   2023-01-05
5   2023-01-06
6   2023-01-07
7   2023-01-08
8   2023-01-09
9   2023-01-10
10  2023-01-11
11  2023-01-12
12  2023-01-13
13  2023-01-14
14  2023-01-15
2024-09-16 09:22:38,281 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:23:17,372 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:23:17,377 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:23:17,378 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:23:17,378 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:23:17,378 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,378 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:23:17,378 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:23:17,379 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,379 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:23:17,379 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:23:17,380 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:23:17,380 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,380 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:23:17,380 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:23:17,380 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,381 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:23:17,382 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:23:17,382 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:23:17,382 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,382 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:23:17,382 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:23:17,382 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:23:17,383 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:23:17,383 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:23:17,383 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,383 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:23:17,383 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:23:17,383 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,384 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:23:17,384 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:23:17,384 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:23:17,384 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:23:18,989 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:23:19,000 - backend.code_completion.check_code - INFO -     avg_temp_celsius  filled
0               -3.0    -3.0
1                NaN    -3.0
2                6.0     6.0
3               -1.0    -1.0
4                NaN     NaN
5                6.0     6.0
6                4.0     4.0
7                NaN     4.0
8                1.0     1.0
9                2.0     2.0
10               NaN     NaN
11               7.0     7.0
12               9.0     9.0
13              -2.0    -2.0
14               NaN    -2.0
2024-09-16 09:23:19,007 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:23:24,134 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:23:24,136 - backend.code_completion.check_code - INFO -     avg_temp_celsius  filled
0               -3.0    -3.0
1                NaN    -3.0
2                6.0     6.0
3               -1.0    -1.0
4                NaN     NaN
5                6.0     6.0
6                4.0     4.0
7                NaN     4.0
8                1.0     1.0
9                2.0     2.0
10               NaN     NaN
11               7.0     7.0
12               9.0     9.0
13              -2.0    -2.0
14               NaN    -2.0
2024-09-16 09:23:24,139 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:23:27,935 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:23:27,938 - backend.code_completion.check_code - INFO -     avg_temp_celsius  filled
0               -3.0    -3.0
1                NaN    -3.0
2                6.0     6.0
3               -1.0    -1.0
4                NaN     NaN
5                6.0     6.0
6                4.0     4.0
7                NaN     4.0
8                1.0     1.0
9                2.0     2.0
10               NaN     NaN
11               7.0     7.0
12               9.0     9.0
13              -2.0    -2.0
14               NaN    -2.0
2024-09-16 09:23:27,941 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:23:29,548 - backend.code_completion.check_code - INFO - result = (
	df.efsf

)
2024-09-16 09:23:29,550 - backend.code_completion.check_code - INFO -     avg_temp_celsius  filled
0               -3.0    -3.0
1                NaN    -3.0
2                6.0     6.0
3               -1.0    -1.0
4                NaN     NaN
5                6.0     6.0
6                4.0     4.0
7                NaN     4.0
8                1.0     1.0
9                2.0     2.0
10               NaN     NaN
11               7.0     7.0
12               9.0     9.0
13              -2.0    -2.0
14               NaN    -2.0
2024-09-16 09:23:29,555 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:23:35,995 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:23:35,998 - backend.code_completion.check_code - INFO -     avg_temp_celsius  filled
0               -3.0    -3.0
1                NaN    -3.0
2                6.0     6.0
3               -1.0    -1.0
4                NaN     NaN
5                6.0     6.0
6                4.0     4.0
7                NaN     4.0
8                1.0     1.0
9                2.0     2.0
10               NaN     NaN
11               7.0     7.0
12               9.0     9.0
13              -2.0    -2.0
14               NaN    -2.0
2024-09-16 09:23:36,000 - backend.code_completion.check_code - INFO -           date  avg_temp_celsius
0   2023-01-01              -3.0
1   2023-01-02               NaN
2   2023-01-03               6.0
3   2023-01-04              -1.0
4   2023-01-05               NaN
5   2023-01-06               6.0
6   2023-01-07               4.0
7   2023-01-08               NaN
8   2023-01-09               1.0
9   2023-01-10               2.0
10  2023-01-11               NaN
11  2023-01-12               7.0
12  2023-01-13               9.0
13  2023-01-14              -2.0
14  2023-01-15               NaN
2024-09-16 09:25:32,301 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 09:25:32,306 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 09:25:32,307 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 09:25:32,307 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:25:32,307 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,307 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 09:25:32,308 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:25:32,308 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,308 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 09:25:32,308 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 09:25:32,308 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:25:32,309 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,309 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 09:25:32,309 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:25:32,309 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,309 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 09:25:32,310 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:25:32,310 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,310 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 09:25:32,310 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:25:32,310 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,310 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:25:32,311 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 09:25:32,311 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:25:32,311 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,311 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:25:32,311 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 09:25:32,312 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 09:25:32,312 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 09:25:32,312 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:25:32,312 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,312 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 09:25:32,313 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 09:25:32,313 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,313 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 09:25:32,313 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 09:25:32,313 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 09:25:32,313 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 09:25:35,071 - backend.code_completion.check_code - INFO - result = (
	df

)
2024-09-16 09:25:35,152 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0                Contoso            11132
1               Fabrikam             1516
2              Proseware             2763
3      Northwind Traders              638
4             Fabrikam                332
5               A. Datum              555
6       Southridge Video             6749
7                Litware              875
8   Wide World Importers             3922
9               Litware               161
10         Tailspin Toys             2732
11              Contoso               977
12       Adventure Works             4616
13      Adventure Works                30
14     The Phone Company             6519
2024-09-16 09:25:35,157 - backend.code_completion.check_code - INFO -        Order Number  Line Number  Order Date  ... Unit Cost Currency Code Exchange Rate
0            284806            1  2017-10-18  ...     5.958           USD        1.0000
1            285506            1  2017-10-25  ...     5.958           AUD        1.2967
2            311002            2  2018-07-07  ...     6.620           AUD        1.3484
3            366307            2  2020-01-11  ...     6.620           AUD        1.4545
4            325708            3  2018-12-01  ...     6.620           USD        1.0000
...             ...          ...         ...  ...       ...           ...           ...
13910        277804            0  2017-08-09  ...     2.394           AUD        1.2683
13911        368000            1  2020-01-28  ...     1.710           CAD        1.3190
13912        327307            0  2018-12-17  ...     1.710           GBP        0.7926
13913        320507            2  2018-10-10  ...     1.710           CAD        1.2963
13914        364705            2  2019-12-26  ...     1.710           CAD        1.3161

[13915 rows x 20 columns]
2024-09-16 09:25:38,473 - backend.code_completion.check_code - INFO - result = (
	df.efef

)
2024-09-16 09:25:38,487 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0       Adventure Works                30
1              Proseware             2763
2       Southridge Video             6749
3      Northwind Traders              638
4               Contoso               977
5                Litware              875
6             Fabrikam                332
7               Litware               161
8        Adventure Works             4616
9          Tailspin Toys             2732
10               Contoso            11132
11              Fabrikam             1516
12              A. Datum              555
13     The Phone Company             6519
14  Wide World Importers             3922
2024-09-16 09:25:38,490 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:25:47,666 - backend.code_completion.check_code - INFO - result = (
	df
	.select('content')

)
2024-09-16 09:25:47,692 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0                Litware              875
1        Adventure Works             4616
2               Litware               161
3              Proseware             2763
4               Fabrikam             1516
5          Tailspin Toys             2732
6      The Phone Company             6519
7   Wide World Importers             3922
8               Contoso               977
9       Adventure Works                30
10     Northwind Traders              638
11               Contoso            11132
12            Fabrikam                332
13      Southridge Video             6749
14              A. Datum              555
2024-09-16 09:25:47,695 - backend.code_completion.check_code - INFO - Empty DataFrame
Columns: []
Index: []
2024-09-16 09:26:07,357 - backend.code_completion.check_code - INFO - result = (
	df
	.select('Order Number')

)
2024-09-16 09:26:07,369 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0               Litware               161
1       Southridge Video             6749
2   Wide World Importers             3922
3          Tailspin Toys             2732
4               Fabrikam             1516
5                Contoso            11132
6        Adventure Works             4616
7      The Phone Company             6519
8               Contoso               977
9      Northwind Traders              638
10            Fabrikam                332
11             Proseware             2763
12               Litware              875
13      Adventure Works                30
14              A. Datum              555
2024-09-16 09:26:07,370 - backend.code_completion.check_code - INFO -        Order Number
0            284806
1            285506
2            311002
3            366307
4            325708
...             ...
13910        277804
13911        368000
13912        327307
13913        320507
13914        364705

[13915 rows x 1 columns]
2024-09-16 09:26:41,970 - backend.code_completion.check_code - INFO - result = (
	df
	.group_by('Brand')
	.agg(
		pl.col('Quantity').sum()
	)

)
2024-09-16 09:26:42,020 - backend.code_completion.check_code - INFO -                    Brand  Sum of Quantity
0             Fabrikam                332
1       Adventure Works                30
2              Proseware             2763
3   Wide World Importers             3922
4               Litware               161
5      Northwind Traders              638
6       Southridge Video             6749
7               Fabrikam             1516
8                Contoso            11132
9          Tailspin Toys             2732
10     The Phone Company             6519
11       Adventure Works             4616
12               Litware              875
13              A. Datum              555
14              Contoso               977
2024-09-16 09:26:42,026 - backend.code_completion.check_code - INFO -                    Brand  Quantity
0        Adventure Works      4616
1          Tailspin Toys      2732
2              Proseware      2763
3               A. Datum       555
4      Northwind Traders       638
5             Fabrikam         332
6   Wide World Importers      3922
7               Fabrikam      1516
8               Litware        161
9       Southridge Video      6749
10      Adventure Works         30
11               Litware       875
12              Contoso        977
13     The Phone Company      6519
14               Contoso     11132
2024-09-16 10:26:35,653 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 10:26:35,672 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 10:26:35,672 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:26:35,674 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:35,674 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,674 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:26:35,674 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:35,675 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,675 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:26:35,675 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 10:26:35,675 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:35,675 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,675 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 10:26:35,676 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:35,676 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,676 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 10:26:35,676 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:35,677 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,677 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 10:26:35,677 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:35,677 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,677 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:26:35,678 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 10:26:35,678 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:35,678 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,678 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:26:35,679 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:26:35,679 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:26:35,679 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 10:26:35,679 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:35,679 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,680 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 10:26:35,680 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:35,680 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,680 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 10:26:35,680 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:35,680 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:35,680 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 10:26:40,246 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 10:26:40,259 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 10:26:40,260 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:26:40,261 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:40,261 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,262 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:26:40,262 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:40,263 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,263 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:26:40,263 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 10:26:40,263 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:40,263 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,264 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 10:26:40,264 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:40,264 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,264 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 10:26:40,264 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:40,265 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,265 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 10:26:40,265 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:40,265 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,266 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:26:40,266 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 10:26:40,266 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:40,266 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,266 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:26:40,266 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:26:40,267 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:26:40,267 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 10:26:40,267 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:40,267 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,267 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 10:26:40,267 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:26:40,268 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,268 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 10:26:40,268 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:26:40,268 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:26:40,268 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 10:27:10,315 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 10:27:10,322 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 10:27:10,323 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:27:10,324 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:27:10,324 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,324 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:27:10,324 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:27:10,324 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,324 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:27:10,325 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 10:27:10,325 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:27:10,325 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,325 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 10:27:10,325 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:27:10,325 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,326 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 10:27:10,326 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:27:10,326 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,326 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 10:27:10,326 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:27:10,326 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:27:10,327 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:27:10,328 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 10:27:10,328 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:27:10,328 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,328 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 10:27:10,328 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:27:10,329 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,329 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 10:27:10,329 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:27:10,329 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:27:10,329 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 10:28:17,900 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 10:28:17,904 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 10:28:17,904 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:28:17,904 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:17,904 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,905 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:28:17,905 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:17,905 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,905 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:28:17,905 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 10:28:17,905 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:17,906 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,907 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 10:28:17,908 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:17,909 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,909 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 10:28:17,909 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:17,909 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:17,909 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 10:28:28,239 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 10:28:28,253 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 10:28:28,254 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:28:28,255 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:28,255 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,256 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:28:28,256 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:28,256 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,256 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:28:28,257 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}]
2024-09-16 10:28:28,257 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:28,257 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,258 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}]
2024-09-16 10:28:28,258 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:28,258 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,258 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}]
2024-09-16 10:28:28,259 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:28,259 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,259 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}]
2024-09-16 10:28:28,260 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:28,260 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,260 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:28:28,260 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}]
2024-09-16 10:28:28,260 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:28,261 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,261 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:28:28,261 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:28:28,261 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:28:28,261 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}]
2024-09-16 10:28:28,261 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:28,262 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,262 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 10:28:28,262 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:28:28,263 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,263 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}]
2024-09-16 10:28:28,263 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-16 10:28:28,263 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:28:28,263 - backend.routes.code_routes - INFO - [{'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}]
2024-09-16 10:29:06,955 - backend.routes.code_routes - INFO - Getting all cards
2024-09-16 10:29:06,989 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-16 10:29:07,008 - backend.routes.code_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:30:08,609 - backend.routes.code_routes - INFO - Getting all cards
2024-09-16 10:30:08,613 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-16 10:30:08,615 - backend.routes.code_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:34:09,627 - backend.routes.code_routes - INFO - Getting all cards
2024-09-16 10:34:09,631 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-16 10:34:09,641 - backend.routes.code_routes - INFO - Reviews: [{'id': 12, 'note_id': 7, 'date': '2024-09-16 08:51:58', 'result': 1}, {'id': 11, 'note_id': 9, 'date': '2024-09-16 08:51:18', 'result': 0}, {'id': 10, 'note_id': 5, 'date': '2024-09-16 08:25:30', 'result': 0}, {'id': 9, 'note_id': 1, 'date': '2024-09-16 08:25:26', 'result': 0}, {'id': 8, 'note_id': 15, 'date': '2024-09-16 08:22:53', 'result': 0}, {'id': 7, 'note_id': 4, 'date': '2024-09-16 07:55:54', 'result': 0}, {'id': 6, 'note_id': 6, 'date': '2024-09-16 07:43:17', 'result': 1}, {'id': 5, 'note_id': 13, 'date': '2024-09-16 07:43:02', 'result': 0}, {'id': 4, 'note_id': 2, 'date': '2024-09-16 07:43:00', 'result': 1}, {'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}, {'id': 1, 'note_id': 1, 'date': '2024-09-13 09:54:46', 'result': 1}]
2024-09-16 10:34:14,020 - backend.app - INFO - Deleting review 1
2024-09-16 10:34:18,036 - backend.app - INFO - Deleting review 12
2024-09-16 10:34:20,211 - backend.app - INFO - Deleting review 11
2024-09-16 10:34:21,850 - backend.app - INFO - Deleting review 10
2024-09-16 10:34:23,105 - backend.app - INFO - Deleting review 9
2024-09-16 10:34:24,822 - backend.app - INFO - Deleting review 8
2024-09-16 10:34:26,372 - backend.app - INFO - Deleting review 7
2024-09-16 10:34:27,520 - backend.app - INFO - Deleting review 6
2024-09-16 10:34:28,769 - backend.app - INFO - Deleting review 5
2024-09-16 10:34:30,014 - backend.app - INFO - Deleting review 4
2024-09-16 10:34:32,385 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-16 10:34:32,387 - backend.routes.code_routes - INFO - Reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}, {'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:34:32,422 - backend.routes.code_routes - INFO - Getting all cards
2024-09-16 10:34:35,016 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-16 10:34:35,020 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-16 10:34:35,020 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-16 10:34:35,021 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 2, 'note_id': 2, 'date': '2024-09-13 11:31:55', 'result': 1}]
2024-09-16 10:34:35,023 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:34:35,024 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-13, next_Review=2024-09-14
2024-09-16 10:34:35,024 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:34:35,024 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:34:35,024 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: []
2024-09-16 10:34:35,025 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:34:35,025 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:34:35,025 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:34:35,026 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:34:35,027 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:34:35,027 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: []
2024-09-16 10:34:35,027 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:34:35,028 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: []
2024-09-16 10:34:35,028 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 3, 'note_id': 14, 'date': '2024-09-16 07:42:56', 'result': 1}]
2024-09-16 10:34:35,029 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-16 10:34:35,029 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-16, last_review=2024-09-16, next_Review=2024-09-17
2024-09-16 10:34:35,029 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: []
2024-09-16 10:34:35,029 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': 'Summarise the brand column as sum of the quantity column', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}]
2024-09-22 00:22:20,336 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-22 00:22:20,340 - backend.routes.code_routes - INFO - Reviews: [{'id': 35, 'note_id': 10, 'date': '2024-09-17 10:01:47', 'result': 1}, {'id': 34, 'note_id': 3, 'date': '2024-09-17 10:01:02', 'result': 1}, {'id': 33, 'note_id': 11, 'date': '2024-09-17 10:00:26', 'result': 1}, {'id': 32, 'note_id': 14, 'date': '2024-09-17 09:59:36', 'result': 1}, {'id': 31, 'note_id': 4, 'date': '2024-09-17 09:58:13', 'result': 1}, {'id': 30, 'note_id': 6, 'date': '2024-09-17 09:57:40', 'result': 0}, {'id': 29, 'note_id': 5, 'date': '2024-09-17 07:51:33', 'result': 1}, {'id': 28, 'note_id': 2, 'date': '2024-09-17 07:48:09', 'result': 0}, {'id': 27, 'note_id': 1, 'date': '2024-09-17 07:44:41', 'result': 0}, {'id': 26, 'note_id': 12, 'date': '2024-09-17 07:42:57', 'result': 1}, {'id': 25, 'note_id': 7, 'date': '2024-09-17 07:41:18', 'result': 1}, {'id': 24, 'note_id': 13, 'date': '2024-09-17 07:40:51', 'result': 1}, {'id': 23, 'note_id': 15, 'date': '2024-09-17 07:38:15', 'result': 0}, {'id': 22, 'note_id': 1, 'date': '2024-09-16 10:48:31', 'result': 1}, {'id': 21, 'note_id': 9, 'date': '2024-09-16 10:48:27', 'result': 1}, {'id': 20, 'note_id': 8, 'date': '2024-09-16 10:44:13', 'result': 0}, {'id': 19, 'note_id': 7, 'date': '2024-09-16 10:41:52', 'result': 1}]
2024-09-22 00:22:20,376 - backend.routes.code_routes - INFO - Getting all cards
2024-09-22 00:22:23,976 - backend.routes.card_routes - INFO - Getting all cards
2024-09-22 00:22:23,978 - backend.routes.card_routes - INFO - Cards: []
2024-09-22 00:22:23,978 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-22 00:22:23,979 - backend.routes.card_routes - INFO - Reviews: [{'id': 35, 'note_id': 10, 'date': '2024-09-17 10:01:47', 'result': 1}, {'id': 34, 'note_id': 3, 'date': '2024-09-17 10:01:02', 'result': 1}, {'id': 33, 'note_id': 11, 'date': '2024-09-17 10:00:26', 'result': 1}, {'id': 32, 'note_id': 14, 'date': '2024-09-17 09:59:36', 'result': 1}, {'id': 31, 'note_id': 4, 'date': '2024-09-17 09:58:13', 'result': 1}, {'id': 30, 'note_id': 6, 'date': '2024-09-17 09:57:40', 'result': 0}, {'id': 29, 'note_id': 5, 'date': '2024-09-17 07:51:33', 'result': 1}, {'id': 28, 'note_id': 2, 'date': '2024-09-17 07:48:09', 'result': 0}, {'id': 27, 'note_id': 1, 'date': '2024-09-17 07:44:41', 'result': 0}, {'id': 26, 'note_id': 12, 'date': '2024-09-17 07:42:57', 'result': 1}, {'id': 25, 'note_id': 7, 'date': '2024-09-17 07:41:18', 'result': 1}, {'id': 24, 'note_id': 13, 'date': '2024-09-17 07:40:51', 'result': 1}, {'id': 23, 'note_id': 15, 'date': '2024-09-17 07:38:15', 'result': 0}, {'id': 22, 'note_id': 1, 'date': '2024-09-16 10:48:31', 'result': 1}, {'id': 21, 'note_id': 9, 'date': '2024-09-16 10:48:27', 'result': 1}, {'id': 20, 'note_id': 8, 'date': '2024-09-16 10:44:13', 'result': 0}, {'id': 19, 'note_id': 7, 'date': '2024-09-16 10:41:52', 'result': 1}]
2024-09-22 00:22:27,463 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-22 00:22:27,468 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-22 00:22:27,469 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 27, 'note_id': 1, 'date': '2024-09-17 07:44:41', 'result': 0}, {'id': 22, 'note_id': 1, 'date': '2024-09-16 10:48:31', 'result': 1}]
2024-09-22 00:22:27,470 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:22:27,470 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,470 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 28, 'note_id': 2, 'date': '2024-09-17 07:48:09', 'result': 0}]
2024-09-22 00:22:27,470 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:22:27,471 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,471 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': "Summarise the brand column as sum of the quantity column. Name the summary 'Sum of Quantity'", 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 34, 'note_id': 3, 'date': '2024-09-17 10:01:02', 'result': 1}]
2024-09-22 00:22:27,471 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,471 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,471 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 31, 'note_id': 4, 'date': '2024-09-17 09:58:13', 'result': 1}]
2024-09-22 00:22:27,472 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,472 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,472 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 29, 'note_id': 5, 'date': '2024-09-17 07:51:33', 'result': 1}]
2024-09-22 00:22:27,472 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,472 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 30, 'note_id': 6, 'date': '2024-09-17 09:57:40', 'result': 0}]
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 25, 'note_id': 7, 'date': '2024-09-17 07:41:18', 'result': 1}, {'id': 19, 'note_id': 7, 'date': '2024-09-16 10:41:52', 'result': 1}]
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,473 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 20, 'note_id': 8, 'date': '2024-09-16 10:44:13', 'result': 0}]
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-16, next_Review=2024-09-17
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'. REturn the new column and avg_temp_nulls_filled", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 21, 'note_id': 9, 'date': '2024-09-16 10:48:27', 'result': 1}]
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-16, next_Review=2024-09-17
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 35, 'note_id': 10, 'date': '2024-09-17 10:01:47', 'result': 1}]
2024-09-22 00:22:27,474 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,475 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,475 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 33, 'note_id': 11, 'date': '2024-09-17 10:00:26', 'result': 1}]
2024-09-22 00:22:27,475 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,475 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,475 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 26, 'note_id': 12, 'date': '2024-09-17 07:42:57', 'result': 1}]
2024-09-22 00:22:27,476 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,476 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,476 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 24, 'note_id': 13, 'date': '2024-09-17 07:40:51', 'result': 1}]
2024-09-22 00:22:27,476 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,476 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,477 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 32, 'note_id': 14, 'date': '2024-09-17 09:59:36', 'result': 1}]
2024-09-22 00:22:27,477 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:22:27,477 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,477 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 23, 'note_id': 15, 'date': '2024-09-17 07:38:15', 'result': 0}]
2024-09-22 00:22:27,477 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:22:27,477 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:22:27,478 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': "Summarise the brand column as sum of the quantity column. Name the summary 'Sum of Quantity'", 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'. REturn the new column and avg_temp_nulls_filled", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}]
2024-09-22 00:35:07,656 - backend.routes.code_routes - INFO - Getting all code reviews
2024-09-22 00:35:07,658 - backend.routes.code_routes - INFO - Reviews: [{'id': 35, 'note_id': 10, 'date': '2024-09-17 10:01:47', 'result': 1}, {'id': 34, 'note_id': 3, 'date': '2024-09-17 10:01:02', 'result': 1}, {'id': 33, 'note_id': 11, 'date': '2024-09-17 10:00:26', 'result': 1}, {'id': 32, 'note_id': 14, 'date': '2024-09-17 09:59:36', 'result': 1}, {'id': 31, 'note_id': 4, 'date': '2024-09-17 09:58:13', 'result': 1}, {'id': 30, 'note_id': 6, 'date': '2024-09-17 09:57:40', 'result': 0}, {'id': 29, 'note_id': 5, 'date': '2024-09-17 07:51:33', 'result': 1}, {'id': 28, 'note_id': 2, 'date': '2024-09-17 07:48:09', 'result': 0}, {'id': 27, 'note_id': 1, 'date': '2024-09-17 07:44:41', 'result': 0}, {'id': 26, 'note_id': 12, 'date': '2024-09-17 07:42:57', 'result': 1}, {'id': 25, 'note_id': 7, 'date': '2024-09-17 07:41:18', 'result': 1}, {'id': 24, 'note_id': 13, 'date': '2024-09-17 07:40:51', 'result': 1}, {'id': 23, 'note_id': 15, 'date': '2024-09-17 07:38:15', 'result': 0}, {'id': 22, 'note_id': 1, 'date': '2024-09-16 10:48:31', 'result': 1}, {'id': 21, 'note_id': 9, 'date': '2024-09-16 10:48:27', 'result': 1}, {'id': 20, 'note_id': 8, 'date': '2024-09-16 10:44:13', 'result': 0}, {'id': 19, 'note_id': 7, 'date': '2024-09-16 10:41:52', 'result': 1}]
2024-09-22 00:35:07,695 - backend.routes.code_routes - INFO - Getting all cards
2024-09-22 00:38:00,746 - backend.routes.card_routes - INFO - Getting all cards
2024-09-22 00:38:00,747 - backend.routes.card_routes - INFO - Cards: []
2024-09-22 00:38:00,748 - backend.routes.card_routes - INFO - Getting all card reviews
2024-09-22 00:38:00,748 - backend.routes.card_routes - INFO - Reviews: [{'id': 35, 'note_id': 10, 'date': '2024-09-17 10:01:47', 'result': 1}, {'id': 34, 'note_id': 3, 'date': '2024-09-17 10:01:02', 'result': 1}, {'id': 33, 'note_id': 11, 'date': '2024-09-17 10:00:26', 'result': 1}, {'id': 32, 'note_id': 14, 'date': '2024-09-17 09:59:36', 'result': 1}, {'id': 31, 'note_id': 4, 'date': '2024-09-17 09:58:13', 'result': 1}, {'id': 30, 'note_id': 6, 'date': '2024-09-17 09:57:40', 'result': 0}, {'id': 29, 'note_id': 5, 'date': '2024-09-17 07:51:33', 'result': 1}, {'id': 28, 'note_id': 2, 'date': '2024-09-17 07:48:09', 'result': 0}, {'id': 27, 'note_id': 1, 'date': '2024-09-17 07:44:41', 'result': 0}, {'id': 26, 'note_id': 12, 'date': '2024-09-17 07:42:57', 'result': 1}, {'id': 25, 'note_id': 7, 'date': '2024-09-17 07:41:18', 'result': 1}, {'id': 24, 'note_id': 13, 'date': '2024-09-17 07:40:51', 'result': 1}, {'id': 23, 'note_id': 15, 'date': '2024-09-17 07:38:15', 'result': 0}, {'id': 22, 'note_id': 1, 'date': '2024-09-16 10:48:31', 'result': 1}, {'id': 21, 'note_id': 9, 'date': '2024-09-16 10:48:27', 'result': 1}, {'id': 20, 'note_id': 8, 'date': '2024-09-16 10:44:13', 'result': 0}, {'id': 19, 'note_id': 7, 'date': '2024-09-16 10:41:52', 'result': 1}]
2024-09-22 00:38:02,210 - backend.routes.code_routes - INFO - Getting codes to review
2024-09-22 00:38:02,222 - backend.scheduling.sm2_algorithm - INFO - Running sm2 algo
2024-09-22 00:38:02,223 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 27, 'note_id': 1, 'date': '2024-09-17 07:44:41', 'result': 0}, {'id': 22, 'note_id': 1, 'date': '2024-09-16 10:48:31', 'result': 1}]
2024-09-22 00:38:02,224 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:38:02,225 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,227 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 28, 'note_id': 2, 'date': '2024-09-17 07:48:09', 'result': 0}]
2024-09-22 00:38:02,228 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:38:02,229 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,230 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': "Summarise the brand column as sum of the quantity column. Name the summary 'Sum of Quantity'", 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 34, 'note_id': 3, 'date': '2024-09-17 10:01:02', 'result': 1}]
2024-09-22 00:38:02,232 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,234 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,235 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 31, 'note_id': 4, 'date': '2024-09-17 09:58:13', 'result': 1}]
2024-09-22 00:38:02,236 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,237 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,238 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, has reviews: [{'id': 29, 'note_id': 5, 'date': '2024-09-17 07:51:33', 'result': 1}]
2024-09-22 00:38:02,240 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,242 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,242 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 30, 'note_id': 6, 'date': '2024-09-17 09:57:40', 'result': 0}]
2024-09-22 00:38:02,242 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:38:02,242 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,243 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 25, 'note_id': 7, 'date': '2024-09-17 07:41:18', 'result': 1}, {'id': 19, 'note_id': 7, 'date': '2024-09-16 10:41:52', 'result': 1}]
2024-09-22 00:38:02,243 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,243 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,243 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 20, 'note_id': 8, 'date': '2024-09-16 10:44:13', 'result': 0}]
2024-09-22 00:38:02,244 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:38:02,244 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-16, next_Review=2024-09-17
2024-09-22 00:38:02,244 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'. REturn the new column and avg_temp_nulls_filled", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 21, 'note_id': 9, 'date': '2024-09-16 10:48:27', 'result': 1}]
2024-09-22 00:38:02,244 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,245 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-16, next_Review=2024-09-17
2024-09-22 00:38:02,245 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 35, 'note_id': 10, 'date': '2024-09-17 10:01:47', 'result': 1}]
2024-09-22 00:38:02,245 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,246 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,246 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, has reviews: [{'id': 33, 'note_id': 11, 'date': '2024-09-17 10:00:26', 'result': 1}]
2024-09-22 00:38:02,246 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,247 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,247 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 26, 'note_id': 12, 'date': '2024-09-17 07:42:57', 'result': 1}]
2024-09-22 00:38:02,247 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,248 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,248 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 24, 'note_id': 13, 'date': '2024-09-17 07:40:51', 'result': 1}]
2024-09-22 00:38:02,249 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,249 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,250 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, has reviews: [{'id': 32, 'note_id': 14, 'date': '2024-09-17 09:59:36', 'result': 1}]
2024-09-22 00:38:02,250 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.5
2024-09-22 00:38:02,251 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,251 - backend.scheduling.sm2_algorithm - DEBUG - Checking card {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}, has reviews: [{'id': 23, 'note_id': 15, 'date': '2024-09-17 07:38:15', 'result': 0}]
2024-09-22 00:38:02,252 - backend.scheduling.sm2_algorithm - DEBUG - Found interval = 1, ease_factor = 2.1799999999999997
2024-09-22 00:38:02,253 - backend.scheduling.sm2_algorithm - DEBUG - Today = 2024-09-22, last_review=2024-09-17, next_Review=2024-09-18
2024-09-22 00:38:02,253 - backend.routes.code_routes - INFO - [{'id': 1, 'note_id': 1, 'code': 'result = df.select(pl.all().n_unique())', 'problem_description': '1esfsfsef', 'dataset_name': 'covid_19_deaths.csv', 'dataset_header': '{"Data As Of":{"0":"09\\/27\\/2023","1":"09\\/27\\/2023","2":"09\\/27\\/2023"},"Start Date":{"0":"01\\/01\\/2020","1":"01\\/01\\/2020","2":"01\\/01\\/2020"},"End Date":{"0":"09\\/23\\/2023","1":"09\\/23\\/2023","2":"09\\/23\\/2023"},"Group":{"0":"By Total","1":"By Total","2":"By Total"},"Year":{"0":null,"1":null,"2":null},"Month":{"0":null,"1":null,"2":null},"State":{"0":"United States","1":"United States","2":"United States"},"Sex":{"0":"All Sexes","1":"All Sexes","2":"All Sexes"},"Age Group":{"0":"All Ages","1":"Under 1 year","2":"0-17 years"},"COVID-19 Deaths":{"0":1146774.0,"1":519.0,"2":1696.0},"Total Deaths":{"0":12303399.0,"1":73213.0,"2":130970.0},"Pneumonia Deaths":{"0":1162844.0,"1":1056.0,"2":2961.0},"Pneumonia and COVID-19 Deaths":{"0":569264.0,"1":95.0,"2":424.0},"Influenza Deaths":{"0":22229.0,"1":64.0,"2":509.0},"Pneumonia, Influenza, or COVID-19 Deaths":{"0":1760095.0,"1":1541.0,"2":4716.0},"Footnote":{"0":null,"1":null,"2":null}}'}, {'id': 2, 'note_id': 2, 'code': 'from polars import selectors as cs\nresult = (\n    df\n    .select(cs.numeric())\n    .sum()\n)', 'problem_description': 'Sum the numeric columns ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 3, 'note_id': 3, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(pl.col('Quantity').sum().alias('Sum of Quantity'))\n)", 'problem_description': "Summarise the brand column as sum of the quantity column. Name the summary 'Sum of Quantity'", 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 4, 'note_id': 4, 'code': "result = (\n    df\n    .group_by('Brand')\n    .agg(\n        pl.col('Customer Name')\n        .first()\n    )\n)", 'problem_description': 'Aggregate brand column by taking the first customer name ', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 5, 'note_id': 5, 'code': "result = df.select(\n    'Category',\n    'Subcategory',\n    pl.col('Quantity').sum().over('Category').alias('QuanityByCat')\n)", 'problem_description': 'Return the category and Subcategory columns and a new column which is the sum of Quantity for each Category. Call the new column QuanityByCat', 'dataset_name': 'contoso_sales.csv', 'dataset_header': '{"Order Number":{"0":284806,"1":285506,"2":311002},"Line Number":{"0":1,"1":1,"2":2},"Order Date":{"0":"2017-10-18","1":"2017-10-25","2":"2018-07-07"},"Delivery Date":{"0":"2017-10-20","1":"2017-10-26","2":"2018-07-12"},"Customer Name":{"0":"Eric Kennedy","1":"George Tooth","2":"Caleb Greene"},"Customer Gender":{"0":"Male","1":"Male","2":"Male"},"Customer Country":{"0":"United States","1":"Australia","2":"Australia"},"Customer Age":{"0":47,"1":30,"2":59},"Store Name":{"0":"Online store","1":"Online store","2":"Online store"},"Product Name":{"0":"Contoso 512MB MP3 Player E51 Silver","1":"Contoso 512MB MP3 Player E51 Silver","2":"Contoso 512MB MP3 Player E51 Silver"},"Color":{"0":"Silver","1":"Silver","2":"Silver"},"Brand":{"0":"Contoso","1":"Contoso","2":"Contoso"},"Category":{"0":"Audio","1":"Audio","2":"Audio"},"Subcategory":{"0":"MP4&MP3","1":"MP4&MP3","2":"MP4&MP3"},"Quantity":{"0":7,"1":1,"2":6},"Unit Price":{"0":11.691,"1":11.691,"2":12.99},"Net Price":{"0":10.288,"1":11.691,"2":12.99},"Unit Cost":{"0":5.958,"1":5.958,"2":6.62},"Currency Code":{"0":"USD","1":"AUD","2":"AUD"},"Exchange Rate":{"0":1.0,"1":1.2967,"2":1.3484}}'}, {'id': 6, 'note_id': 6, 'code': "result = df.select('avg_temp_celsius').null_count()", 'problem_description': 'Get the count of nulls in avgerage temperature celsisus column ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 7, 'note_id': 7, 'code': 'result = df.drop_nulls()', 'problem_description': 'Drop all null values from dataframe ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 8, 'note_id': 8, 'code': 'cols_to_drop = [\n    column \n    for column in df.columns \n    if df.select(pl.col(column).is_null().any()).item()]\nresult = df.drop(cols_to_drop)', 'problem_description': 'Drop any column with a null value ', 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 9, 'note_id': 9, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    avg_temp_nulls_filled=pl.col('avg_temp_celsius').fill_null(pl.lit('1'))\n)", 'problem_description': "Create a new column avg_temp_nulls_filled, with nulls filled in as '1'. REturn the new column and avg_temp_nulls_filled", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 10, 'note_id': 10, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='forward'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls forward filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 11, 'note_id': 11, 'code': "result = df.select(\n    pl.col('avg_temp_celsius'),\n    filled=pl.col('avg_temp_celsius').fill_null(strategy='mean'),\n)", 'problem_description': "Select the column avg_temp_celsius and a new column 'filled' which has nulls mean filled ", 'dataset_name': 'temperatures.csv', 'dataset_header': '{"date":{"0":"2023-01-01","1":"2023-01-02","2":"2023-01-03"},"avg_temp_celsius":{"0":-3.0,"1":null,"2":6.0}}'}, {'id': 12, 'note_id': 12, 'code': "result = (\n    df\n    .filter(pl.col('content').str.starts_with('Very'))\n    .select('content')\n)", 'problem_description': "Filter to rows where content begins with 'Very'. Return only the content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 13, 'note_id': 13, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains('happy'))\n    .select('content')\n)", 'problem_description': "Filter this to rows where 'content' has the string 'happy'. Return only content column ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 14, 'note_id': 14, 'code': "result = (\n    df\n    .filter(pl.col('content').str.contains_any(['happy', 'love', 'best']))\n    .select('content')\n)", 'problem_description': "Filter to rows where 'content' has one of these stinrgs; ['happy', 'love', 'best']. Return only content ", 'dataset_name': 'google_store_reviews.csv', 'dataset_header': '{"reviewId":{"0":"gp:AOqpTOEhZuqSqqWnaKRgv-9ABYdajFUB0WugPGh-SG-fgH355YH_t7J2q4xYo6ZzN3Mc7iSrrTV6ke8hG_fl4Q","1":"gp:AOqpTOH0WP4IQKBZ2LrdNmFy_YmpPCVrV3diEU9KGm3fAX6VG0NAZCudCQpQRRI3GLL_tr8DQzUTP1hrOYG74A","2":"gp:AOqpTOEMCkJB8Iq1p-r9dPwnSYadA5BkPWTf32Z1azuuTvqA9KWdTQqNNXWZsJEhmSuYUY_LmL-OdUIl4j70wg"},"userName":{"0":"Eric Tie","1":"john alpha","2":"Sudhakar .S"},"userImage":{"0":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GiGET2XHTvsSEsA07ZBPu2s1E6fOXd9WyT_ahChpw","1":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GjpfgjOEbD3brypMeMT3KvhYlWG_nO2bMnMIfY9","2":"https:\\/\\/play-lh.googleusercontent.com\\/a-\\/AOh14GidHUHTvHZTXBX36CdxFeccVR2IasC1MHUHXLuFpg"},"content":{"0":"I cannot open the app anymore","1":"I have been begging for a refund from this app for over a month and nobody is replying me","2":"Very costly for the premium version (approx Indian Rupees 910 per year). Better to download the premium version of this app from apkmos website and use it. Microsoft to do list app is far more better."},"score":{"0":1,"1":1,"2":1},"thumbsUpCount":{"0":0,"1":0,"2":0},"reviewCreatedVersion":{"0":"5.4.0.6","1":null,"2":null},"at":{"0":"2020-10-27 21:24:41","1":"2020-10-27 14:03:28","2":"2020-10-27 08:18:40"},"replyContent":{"0":null,"1":"Please note that from checking our records, your email has been answered, and there was no subscription registered under this address. Please check which email address you are using under you app settings- profile, and let us know so we can look further into this.","2":null},"repliedAt":{"0":null,"1":"2020-10-27 15:05:52","2":null},"sortOrder":{"0":"newest","1":"newest","2":"newest"},"appId":{"0":"com.anydo","1":"com.anydo","2":"com.anydo"}}'}, {'id': 15, 'note_id': 15, 'code': "result = df.unpivot(\n    index='year',\n        on=[\n            'students',\n            'us_students',\n            'undergraduate',\n            'graduate',\n            'non_degree',\n            'opt'\n        ],\n    variable_name='student_type',\n    value_name='count'\n)", 'problem_description': "Convert wide into long by moving ['students','us_students','undergraduate','graduate','non_degree','opt'] to rows. The new column names will be 'student_type', 'count'", 'dataset_name': 'academic.csv', 'dataset_header': '{"year":{"0":"1948\\/49","1":"1949\\/50","2":"1950\\/51"},"students":{"0":25464,"1":26433,"2":29813},"us_students":{"0":2403400.0,"1":2445000.0,"2":2281000.0},"undergraduate":{"0":null,"1":null,"2":null},"graduate":{"0":null,"1":null,"2":null},"non_degree":{"0":null,"1":null,"2":null},"opt":{"0":null,"1":null,"2":null}}'}]
2024-09-22 00:38:23,874 - backend.code_completion.check_code - INFO - result = df.unpivot(
    index='year',
        on=[
            'students',
            'us_students',
            'undergraduate',
            'graduate',
            'non_degree',
            'opt'
        ],
    variable_name='student_type',
    value_name='count'
)
2024-09-22 00:38:23,952 - backend.code_completion.check_code - INFO -         year student_type     count
0    1948/49     students   25464.0
1    1949/50     students   26433.0
2    1950/51     students   29813.0
3    1951/52     students   30462.0
4    1952/53     students   33675.0
..       ...          ...       ...
445  2018/19          opt  223085.0
446  2019/20          opt  223539.0
447  2020/21          opt  203885.0
448  2021/22          opt  184759.0
449  2022/23          opt  198793.0

[450 rows x 3 columns]
2024-09-22 00:38:23,964 - backend.code_completion.check_code - INFO -         year student_type     count
0    1948/49     students   25464.0
1    1949/50     students   26433.0
2    1950/51     students   29813.0
3    1951/52     students   30462.0
4    1952/53     students   33675.0
..       ...          ...       ...
445  2018/19          opt  223085.0
446  2019/20          opt  223539.0
447  2020/21          opt  203885.0
448  2021/22          opt  184759.0
449  2022/23          opt  198793.0

[450 rows x 3 columns]
